// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/quarantine/v1beta1/quarantine.proto

package quarantine

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QuarantineAutoResponse enumerates the quarantine auto-response options.
type QuarantineAutoResponse int32

const (
	// QUARANTINE_UNSPECIFIED defines that no automatic action should be taken.
	QUARANTINE_AUTO_RESPONSE_UNSPECIFIED QuarantineAutoResponse = 0
	// QUARANTINE_AUTO_ACCEPT defines that sends should be automatically accepted.
	QUARANTINE_AUTO_RESPONSE_ACCEPT QuarantineAutoResponse = 1
	// QUARANTINE_AUTO_DECLINE defines that sends should be automatically declined.
	QUARANTINE_AUTO_RESPONSE_DECLINE QuarantineAutoResponse = 2
)

var QuarantineAutoResponse_name = map[int32]string{
	0: "QUARANTINE_AUTO_RESPONSE_UNSPECIFIED",
	1: "QUARANTINE_AUTO_RESPONSE_ACCEPT",
	2: "QUARANTINE_AUTO_RESPONSE_DECLINE",
}

var QuarantineAutoResponse_value = map[string]int32{
	"QUARANTINE_AUTO_RESPONSE_UNSPECIFIED": 0,
	"QUARANTINE_AUTO_RESPONSE_ACCEPT":      1,
	"QUARANTINE_AUTO_RESPONSE_DECLINE":     2,
}

func (x QuarantineAutoResponse) String() string {
	return proto.EnumName(QuarantineAutoResponse_name, int32(x))
}

func (QuarantineAutoResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b055d4922680476, []int{0}
}

// QuarantineRecord defines structure that represents coins that have been quarantined.
type QuarantinedFunds struct {
	// to_address is the intended recipient of the coins that have been quarantined.
	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// from_address is the sender of the coins.
	FromAddress string `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// coins is the amount currently in quarantined for the two addresses.
	Coins github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=coins,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"coins"`
	// declined is true if these funds were previously declined.
	Declined bool `protobuf:"varint,4,opt,name=declined,proto3" json:"declined,omitempty"`
}

func (m *QuarantinedFunds) Reset()         { *m = QuarantinedFunds{} }
func (m *QuarantinedFunds) String() string { return proto.CompactTextString(m) }
func (*QuarantinedFunds) ProtoMessage()    {}
func (*QuarantinedFunds) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b055d4922680476, []int{0}
}
func (m *QuarantinedFunds) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuarantinedFunds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuarantinedFunds.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuarantinedFunds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuarantinedFunds.Merge(m, src)
}
func (m *QuarantinedFunds) XXX_Size() int {
	return m.Size()
}
func (m *QuarantinedFunds) XXX_DiscardUnknown() {
	xxx_messageInfo_QuarantinedFunds.DiscardUnknown(m)
}

var xxx_messageInfo_QuarantinedFunds proto.InternalMessageInfo

func (m *QuarantinedFunds) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *QuarantinedFunds) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *QuarantinedFunds) GetCoins() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *QuarantinedFunds) GetDeclined() bool {
	if m != nil {
		return m.Declined
	}
	return false
}

// QuarantineAutoResponseEntry defines the auto response to one address from another.
type QuarantineAutoResponseEntry struct {
	// to_address is the receiving address.
	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// from_address is the sending address.
	FromAddress string `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// response is the auto-response setting for these two addresses.
	Response QuarantineAutoResponse `protobuf:"varint,3,opt,name=response,proto3,enum=cosmos.quarantine.v1beta1.QuarantineAutoResponse" json:"response,omitempty"`
}

func (m *QuarantineAutoResponseEntry) Reset()         { *m = QuarantineAutoResponseEntry{} }
func (m *QuarantineAutoResponseEntry) String() string { return proto.CompactTextString(m) }
func (*QuarantineAutoResponseEntry) ProtoMessage()    {}
func (*QuarantineAutoResponseEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b055d4922680476, []int{1}
}
func (m *QuarantineAutoResponseEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuarantineAutoResponseEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuarantineAutoResponseEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuarantineAutoResponseEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuarantineAutoResponseEntry.Merge(m, src)
}
func (m *QuarantineAutoResponseEntry) XXX_Size() int {
	return m.Size()
}
func (m *QuarantineAutoResponseEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_QuarantineAutoResponseEntry.DiscardUnknown(m)
}

var xxx_messageInfo_QuarantineAutoResponseEntry proto.InternalMessageInfo

func (m *QuarantineAutoResponseEntry) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *QuarantineAutoResponseEntry) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *QuarantineAutoResponseEntry) GetResponse() QuarantineAutoResponse {
	if m != nil {
		return m.Response
	}
	return QUARANTINE_AUTO_RESPONSE_UNSPECIFIED
}

// QuarantineAutoResponseUpdate defines a quarantine auto response update that should be applied.
type QuarantineAutoResponseUpdate struct {
	// from_address is the address that funds would be coming from.
	FromAddress string `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// response is the automatic action to take on funds sent from from_address, or in the
	// case of QUARANTINE_AUTO_RESPONSE_UNSPECIFIED, that no automatic action should be taken.
	Response QuarantineAutoResponse `protobuf:"varint,2,opt,name=response,proto3,enum=cosmos.quarantine.v1beta1.QuarantineAutoResponse" json:"response,omitempty"`
}

func (m *QuarantineAutoResponseUpdate) Reset()         { *m = QuarantineAutoResponseUpdate{} }
func (m *QuarantineAutoResponseUpdate) String() string { return proto.CompactTextString(m) }
func (*QuarantineAutoResponseUpdate) ProtoMessage()    {}
func (*QuarantineAutoResponseUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b055d4922680476, []int{2}
}
func (m *QuarantineAutoResponseUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuarantineAutoResponseUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuarantineAutoResponseUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuarantineAutoResponseUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuarantineAutoResponseUpdate.Merge(m, src)
}
func (m *QuarantineAutoResponseUpdate) XXX_Size() int {
	return m.Size()
}
func (m *QuarantineAutoResponseUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_QuarantineAutoResponseUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_QuarantineAutoResponseUpdate proto.InternalMessageInfo

func (m *QuarantineAutoResponseUpdate) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *QuarantineAutoResponseUpdate) GetResponse() QuarantineAutoResponse {
	if m != nil {
		return m.Response
	}
	return QUARANTINE_AUTO_RESPONSE_UNSPECIFIED
}

// QuarantineRecord defines information regarding quarantined funds.
type QuarantineRecord struct {
	// coins is the amount that has been quarantined.
	Coins github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=coins,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"coins"`
	// declined is whether these funds have been declined.
	Declined bool `protobuf:"varint,2,opt,name=declined,proto3" json:"declined,omitempty"`
}

func (m *QuarantineRecord) Reset()         { *m = QuarantineRecord{} }
func (m *QuarantineRecord) String() string { return proto.CompactTextString(m) }
func (*QuarantineRecord) ProtoMessage()    {}
func (*QuarantineRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b055d4922680476, []int{3}
}
func (m *QuarantineRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuarantineRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuarantineRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuarantineRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuarantineRecord.Merge(m, src)
}
func (m *QuarantineRecord) XXX_Size() int {
	return m.Size()
}
func (m *QuarantineRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_QuarantineRecord.DiscardUnknown(m)
}

var xxx_messageInfo_QuarantineRecord proto.InternalMessageInfo

func (m *QuarantineRecord) GetCoins() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *QuarantineRecord) GetDeclined() bool {
	if m != nil {
		return m.Declined
	}
	return false
}

func init() {
	proto.RegisterEnum("cosmos.quarantine.v1beta1.QuarantineAutoResponse", QuarantineAutoResponse_name, QuarantineAutoResponse_value)
	proto.RegisterType((*QuarantinedFunds)(nil), "cosmos.quarantine.v1beta1.QuarantinedFunds")
	proto.RegisterType((*QuarantineAutoResponseEntry)(nil), "cosmos.quarantine.v1beta1.QuarantineAutoResponseEntry")
	proto.RegisterType((*QuarantineAutoResponseUpdate)(nil), "cosmos.quarantine.v1beta1.QuarantineAutoResponseUpdate")
	proto.RegisterType((*QuarantineRecord)(nil), "cosmos.quarantine.v1beta1.QuarantineRecord")
}

func init() {
	proto.RegisterFile("cosmos/quarantine/v1beta1/quarantine.proto", fileDescriptor_0b055d4922680476)
}

var fileDescriptor_0b055d4922680476 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x8d, 0xd3, 0x81, 0x3a, 0x0f, 0xa1, 0x2a, 0x9a, 0x50, 0x56, 0x50, 0x1a, 0x95, 0x1d, 0xc2,
	0xa4, 0xa5, 0x74, 0x1c, 0x38, 0x70, 0x4a, 0x33, 0x4f, 0xaa, 0x04, 0x59, 0x97, 0xb6, 0x17, 0x2e,
	0x51, 0x1a, 0x9b, 0x12, 0x41, 0xed, 0x62, 0xbb, 0x88, 0xfd, 0x02, 0x38, 0x82, 0xf8, 0x09, 0xdc,
	0x76, 0xe6, 0x47, 0xec, 0x38, 0x71, 0xe2, 0x04, 0xa8, 0xfd, 0x23, 0x28, 0x8d, 0xd7, 0x06, 0xd1,
	0x82, 0x04, 0x12, 0x9c, 0x12, 0xfb, 0xbd, 0xf7, 0x7d, 0xef, 0xfb, 0xf4, 0x64, 0xb8, 0x97, 0x30,
	0x31, 0x62, 0xa2, 0xf1, 0x62, 0x12, 0xf3, 0x98, 0xca, 0x94, 0x92, 0xc6, 0xcb, 0xe6, 0x80, 0xc8,
	0xb8, 0x59, 0xb8, 0x72, 0xc7, 0x9c, 0x49, 0x66, 0xec, 0xe4, 0x5c, 0xb7, 0x00, 0x28, 0x6e, 0x75,
	0x7b, 0xc8, 0x86, 0x6c, 0xce, 0x6a, 0x64, 0x7f, 0xb9, 0xa0, 0xaa, 0x04, 0x51, 0x0e, 0x28, 0x75,
	0x0e, 0x59, 0xaa, 0xef, 0x20, 0x16, 0xcb, 0x8e, 0x09, 0x4b, 0x69, 0x8e, 0xd7, 0x5f, 0xeb, 0xb0,
	0x72, 0xb2, 0xe8, 0x83, 0x8f, 0x26, 0x14, 0x0b, 0xe3, 0x3e, 0x84, 0x92, 0x45, 0x31, 0xc6, 0x9c,
	0x08, 0x61, 0x02, 0x1b, 0x38, 0x9b, 0x2d, 0xf3, 0xd3, 0xc7, 0xfd, 0x6d, 0x55, 0xda, 0xcb, 0x91,
	0xae, 0xe4, 0x29, 0x1d, 0x86, 0x9b, 0x92, 0xa9, 0x0b, 0xe3, 0x01, 0xbc, 0xf6, 0x84, 0xb3, 0xd1,
	0x42, 0xaa, 0xff, 0x46, 0xba, 0x95, 0xb1, 0x2f, 0xc5, 0x31, 0xbc, 0x92, 0x19, 0x13, 0x66, 0xc9,
	0x2e, 0x39, 0x5b, 0x07, 0x3b, 0xae, 0x92, 0x64, 0xd6, 0x2f, 0x17, 0xe0, 0xfa, 0x2c, 0xa5, 0xad,
	0xbb, 0xe7, 0x5f, 0x6a, 0xda, 0xd9, 0xd7, 0x9a, 0x33, 0x4c, 0xe5, 0xd3, 0xc9, 0xc0, 0x4d, 0xd8,
	0x48, 0x4d, 0xad, 0x3e, 0xfb, 0x02, 0x3f, 0x6b, 0xc8, 0xd3, 0x31, 0x11, 0x73, 0x81, 0x08, 0xf3,
	0xca, 0x46, 0x15, 0x96, 0x31, 0x49, 0x9e, 0x67, 0x93, 0x9a, 0x1b, 0x36, 0x70, 0xca, 0xe1, 0xe2,
	0x5c, 0x9f, 0x02, 0x78, 0x73, 0xb9, 0x09, 0x6f, 0x22, 0x59, 0x48, 0xc4, 0x98, 0x51, 0x41, 0x10,
	0x95, 0xfc, 0xf4, 0x3f, 0x2d, 0xe5, 0x11, 0x2c, 0x73, 0x65, 0xc3, 0x2c, 0xd9, 0xc0, 0xb9, 0x7e,
	0xd0, 0x74, 0xd7, 0xc6, 0xc3, 0x5d, 0xed, 0x3f, 0x5c, 0x94, 0xa8, 0x9f, 0x01, 0x78, 0x6b, 0x35,
	0xa9, 0x3f, 0xc6, 0xb1, 0x24, 0x3f, 0x99, 0x05, 0x7f, 0x6a, 0x56, 0xff, 0x7b, 0xb3, 0xef, 0x40,
	0x31, 0x9b, 0x21, 0x49, 0x18, 0xc7, 0xcb, 0x94, 0x80, 0x7f, 0x92, 0x12, 0xfd, 0xc7, 0x94, 0xec,
	0xbd, 0x07, 0xf0, 0xc6, 0x6a, 0xe3, 0x86, 0x03, 0x77, 0x4f, 0xfa, 0x5e, 0xe8, 0x05, 0xbd, 0x76,
	0x80, 0x22, 0xaf, 0xdf, 0x3b, 0x8e, 0x42, 0xd4, 0xed, 0x1c, 0x07, 0x5d, 0x14, 0xf5, 0x83, 0x6e,
	0x07, 0xf9, 0xed, 0xa3, 0x36, 0x3a, 0xac, 0x68, 0xc6, 0x6d, 0x58, 0x5b, 0xcb, 0xf4, 0x7c, 0x1f,
	0x75, 0x7a, 0x15, 0x60, 0xec, 0x42, 0x7b, 0x2d, 0xe9, 0x10, 0xf9, 0x0f, 0xdb, 0x01, 0xaa, 0xe8,
	0xd5, 0x8d, 0x37, 0x1f, 0x2c, 0xad, 0xe5, 0x9f, 0x4f, 0x2d, 0x70, 0x31, 0xb5, 0xc0, 0xb7, 0xa9,
	0x05, 0xde, 0xce, 0x2c, 0xed, 0x62, 0x66, 0x69, 0x9f, 0x67, 0x96, 0xf6, 0xf8, 0xce, 0x2f, 0x87,
	0x7f, 0x55, 0x78, 0x7c, 0x06, 0x57, 0xe7, 0x2f, 0xc2, 0xbd, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x45, 0x6b, 0x7a, 0x94, 0xab, 0x04, 0x00, 0x00,
}

func (m *QuarantinedFunds) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuarantinedFunds) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuarantinedFunds) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Declined {
		i--
		if m.Declined {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Coins) > 0 {
		for iNdEx := len(m.Coins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Coins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuarantine(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintQuarantine(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintQuarantine(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuarantineAutoResponseEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuarantineAutoResponseEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuarantineAutoResponseEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Response != 0 {
		i = encodeVarintQuarantine(dAtA, i, uint64(m.Response))
		i--
		dAtA[i] = 0x18
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintQuarantine(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintQuarantine(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuarantineAutoResponseUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuarantineAutoResponseUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuarantineAutoResponseUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Response != 0 {
		i = encodeVarintQuarantine(dAtA, i, uint64(m.Response))
		i--
		dAtA[i] = 0x10
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintQuarantine(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuarantineRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuarantineRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuarantineRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Declined {
		i--
		if m.Declined {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coins) > 0 {
		for iNdEx := len(m.Coins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Coins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuarantine(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuarantine(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuarantine(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuarantinedFunds) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovQuarantine(uint64(l))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovQuarantine(uint64(l))
	}
	if len(m.Coins) > 0 {
		for _, e := range m.Coins {
			l = e.Size()
			n += 1 + l + sovQuarantine(uint64(l))
		}
	}
	if m.Declined {
		n += 2
	}
	return n
}

func (m *QuarantineAutoResponseEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovQuarantine(uint64(l))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovQuarantine(uint64(l))
	}
	if m.Response != 0 {
		n += 1 + sovQuarantine(uint64(m.Response))
	}
	return n
}

func (m *QuarantineAutoResponseUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovQuarantine(uint64(l))
	}
	if m.Response != 0 {
		n += 1 + sovQuarantine(uint64(m.Response))
	}
	return n
}

func (m *QuarantineRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Coins) > 0 {
		for _, e := range m.Coins {
			l = e.Size()
			n += 1 + l + sovQuarantine(uint64(l))
		}
	}
	if m.Declined {
		n += 2
	}
	return n
}

func sovQuarantine(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuarantine(x uint64) (n int) {
	return sovQuarantine(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuarantinedFunds) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuarantine
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuarantinedFunds: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuarantinedFunds: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coins = append(m.Coins, types.Coin{})
			if err := m.Coins[len(m.Coins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Declined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Declined = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipQuarantine(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuarantine
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuarantineAutoResponseEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuarantine
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuarantineAutoResponseEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuarantineAutoResponseEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			m.Response = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Response |= QuarantineAutoResponse(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuarantine(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuarantine
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuarantineAutoResponseUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuarantine
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuarantineAutoResponseUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuarantineAutoResponseUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			m.Response = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Response |= QuarantineAutoResponse(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuarantine(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuarantine
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuarantineRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuarantine
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuarantineRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuarantineRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuarantine
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuarantine
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coins = append(m.Coins, types.Coin{})
			if err := m.Coins[len(m.Coins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Declined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Declined = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipQuarantine(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuarantine
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuarantine(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuarantine
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuarantine
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuarantine
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuarantine
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuarantine
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuarantine        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuarantine          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuarantine = fmt.Errorf("proto: unexpected end of group")
)
