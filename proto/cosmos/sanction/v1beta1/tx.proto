syntax = "proto3";
package cosmos.sanction.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/sanction";

// Msg defines the sanction Msg service.
service Msg {
  // Sanction is a governance operation for sanctioning addresses.
  rpc Sanction(MsgSanction) returns (MsgSanctionResponse);

  // Unsanction is a governance operation for unsanctioning addresses.
  rpc Unsanction(MsgUnsanction) returns (MsgUnsanctionResponse);

  // ImmediateSanction defines a method for immediately (and temporarily) sanctioning addresses.
  // This method also submits a Sanction governance proposal on the signer's behalf.
  rpc ImmediateSanction(MsgImmediateSanction) returns (MsgImmediateSanctionResponse);

  // ImmediateUnsanction defines a method for immediately (and temporarily) unsanctioning addresses.
  // This method also submits an Unsanction governance proposal on the signer's behalf.
  rpc ImmediateUnsanction(MsgImmediateUnsanction) returns (MsgImmediateUnsanctionResponse);
}

// MsgSanction represents a message for the governance operation of sanctioning addresses.
message MsgSanction {
  option (cosmos.msg.v1.signer) = "authority";

  // addresses are the addresses to sanction.
  repeated string addresses = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // authority is the address of the account with the authority to enact sanctions (most likely the governance module
  // account).
  string authority = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptInResponse defines the Msg/Sanction response type.
message MsgSanctionResponse {}

// MsgSanction represents a message for the governance operation of unsanctioning addresses.
message MsgUnsanction {
  option (cosmos.msg.v1.signer) = "authority";

  // addresses are the addresses to unsanction.
  repeated string addresses = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // authority is the address of the account with the authority to enact sanctions (most likely the governance module
  // account).
  string authority = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptInResponse defines the Msg/Unsanction response type.
message MsgUnsanctionResponse {}

// MsgImmediateSanction represents a message for immediately sanctioning addresses and submitting a governance proposal
// to make it permanent.
message MsgImmediateSanction {
  option (cosmos.msg.v1.signer) = "proposer";

  // addresses are the addresses to sanction.
  repeated string addresses = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // initial_deposit is the initial deposit to send with the Sanction governance proposal.
  // It must be at least as much as the SanctionImmediateParams.min_deposit_sanction amount or this message will be
  // rejected.
  repeated cosmos.base.v1beta1.Coin initial_deposit = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // proposer is the address of the account making the proposal.
  string proposer = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptInResponse defines the Msg/ImmediateSanction response type.
message MsgImmediateSanctionResponse {
  // proposal_id is the id of the Sanction governance proposal that was submitted.
  uint64 proposal_id = 1;
}

// MsgImmediateSanction represents a message for immediately unsanctioning addresses and submitting a governance
// proposal to make it permanent.
message MsgImmediateUnsanction {
  option (cosmos.msg.v1.signer) = "proposer";

  // addresses are the addresses to unsanction.
  repeated string addresses = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // initial_deposit is the initial deposit to send with the Unsanction governance proposal.
  // It must be at least as much as the SanctionImmediateParams.min_deposit_unsanction amount or this message will be
  // rejected.
  repeated cosmos.base.v1beta1.Coin initial_deposit = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // proposer is the address of the account making the proposal.
  string proposer = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptInResponse defines the Msg/ImmediateUnsanction response type.
message MsgImmediateUnsanctionResponse {
  // proposal_id is the id of the Unsanction governance proposal that was submitted.
  uint64 proposal_id = 1 [(gogoproto.jsontag) = "proposal_id"];
}
