syntax = "proto3";
package cosmos.quarantine.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/quarantine/v1beta1/quarantine.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/quarantine";

// Msg defines the bank Msg service.
service Msg {
  // OptIn defines a method for opting in to account quarantine.
  // Funds sent to a quarantined account must be approved before they can be received.
  rpc OptIn(MsgOptIn) returns (MsgOptInResponse);

  // OptOut defines a method for opting out of account quarantine.
  // Any pending funds for the account must still be accepted, but new sends will no longer be quarantined.
  rpc OptOut(MsgOptOut) returns (MsgOptOutResponse);

  // Accept defines a method for accepting quarantined funds.
  rpc Accept(MsgAccept) returns (MsgAcceptResponse);

  // Decline defines a method for declining quarantined funds.
  rpc Decline(MsgDecline) returns (MsgDeclineResponse);

  // UpdateAutoResponses defines a method for updating the auto-response settings for a quarantined address.
  rpc UpdateAutoResponses(MsgUpdateAutoResponses)
      returns (MsgUpdateAutoResponsesResponse);
}

// MsgOptIn represents a message for opting in to account quarantine.
message MsgOptIn {
  option (cosmos.msg.v1.signer) = "to_address";

  string to_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptInResponse defines the Msg/OptIn response type.
message MsgOptInResponse {}

// MsgOptOut represents a message for opting in to account quarantine.
message MsgOptOut {
  option (cosmos.msg.v1.signer) = "to_address";

  string to_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgOptOutResponse defines the Msg/OptOut response type.
message MsgOptOutResponse {}

// MsgAccept represents a message for accepting quarantined funds.
message MsgAccept {
  option (cosmos.msg.v1.signer) = "to_address";

  string to_address   = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string from_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // permanent, if true, causes current and future sends from from_address to to_address to be automatically accepted.
  // If false (default), only the currently quarantined funds will be accepted.
  bool permanent = 3;
}

// MsgAcceptResponse defines the Msg/Accept response type.
message MsgAcceptResponse {}

// MsgDecline represents a message for declining quarantined funds.
message MsgDecline {
  option (cosmos.msg.v1.signer) = "to_address";

  string to_address   = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string from_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // permanent, if true, causes current and future sends from from_address to to_address to be automatically declined.
  // If false (default), only the currently quarantined funds will be declined.
  bool permanent = 3;
}

// MsgDeclineResponse defines the Msg/Decline response type.
message MsgDeclineResponse {}

// MsgUpdateAutoResponses represents a message for updating quarantine auto-responses for a receiving address.
message MsgUpdateAutoResponses {
  option (cosmos.msg.v1.signer) = "to_address";

  // to_address is the quarantined address that would be accepting or declining funds.
  string to_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // updates is the list of addresses and actions that should be updated for the to_address.
  repeated AutoResponseUpdate updates = 2;
}

// MsgUpdateAutoResponsesResponse defines the Msg/UpdateAutoResponse response type.
message MsgUpdateAutoResponsesResponse {}
